Our aim is to make enough GUI to build an IDE.

To not get side-tracked, we need to build towards this rather than anything else.
This means that, at a minimum, we need to solve the following:

1: We need drop-down menus
2: We need a text widget
3: The window must be re-sizeable
4: We need to be able to produce a new window
5: We need to get fonts from the system and use them
6: We need a file selector
7: We need a tree widget
8: We need to have a scrollable box widget
9: We need a widget model that responds to events
10: Other widgets: Checkbox, Drop-down menu, text input, splitter, tabs, icon, button


Plan
----

* Get a single menu displaying
* Connect that to a menubar
* Get the mouse working with a connection to the menu items
* Add actions to the system to handle callbacks
5: Allow the window to be resized
6: Add a text editor widget
7: Allow editing of text
8: Add a file manager to the lhs; include a splitter widget
9: Fill in the menus
10: Add search / replace
11: Add allowing to make an extra window
12: Allow saving and loading
13: Add tabs to the text editor


Current Work and Latest:

* Seperate rendering so a widget will render itself at a given size (and none expanding will cache).
* When the size changes, the widget re-rendering will change
* Work the the SDL system to catch events, and have this as a loop.
* It should be:
*    Create a GUI that sets things up.
*    PyUI main loop.
* So we need a "window" list for frames and borders.
* Keep this in a stack.
* Now filter messages through that.

* Ensure menuitems are highlighted by mouse-over
* Ensure menuitem selection function called when clicked
* Menu is attached to top menu
* Multi-menus, one at a time
Window can be resized
* Menus look ok
* Basic text widget added.


Phase 2
-------

At this point, we start to move to Lisp.
